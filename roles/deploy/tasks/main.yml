---
- name: "Create all the necessary directories and files | {{ playbook_app }}"
  ansible.builtin.include_tasks:
    file: "vols2dirs.yml"
  when: deploy_volumes is defined and deploy_volumes | length > 0

- name: "Prepare config files | {{ playbook_app }}"
  ansible.builtin.include_tasks:
    file: "configfiles.yml"
  when:
    - (deploy_configlist is defined and deploy_configlist | length > 0) or (deploy_templatelist is defined and deploy_templatelist | length > 0)

- name: "Deploy the dependencies | {{ playbook_app }}"
  community.general.docker_container:
    name: "{{ item.name }}"
    image: "{{ item.image }}:{{ item.tag }}"
    command: "{{ item.command | default(omit) }}"
    entrypoint: "{{ item.entrypoint | default(omit) }}"
    pull: "{{ item.pull | default(omit) }}"
    restart_policy: "{{ item.restart_policy | default('unless-stopped') }}"
    networks: "{{ item.networks | default(omit) }}"
    network_mode: "{{ item.network_mode | default(omit) }}"
    healthcheck: "{{ item.healthcheck | default(omit) }}"
    capabilities: "{{ item.capabilities | default(omit) }}"
    security_opt: "{{ item.security_opt | default(omit) }}"
    privileged: "{{ item.privileged | default(omit) }}"
    user: "{{ item.user | default(omit) }}"
    env: "{{ item.env | default(omit) }}"
    labels: "{{ item.labels | default(omit) }}"
    ports: "{{ item.ports | default(omit) }}"
    hostname: "{{ item.hostname | default(omit) }}"
    volumes: "{{ item.volumes | default(omit) }}"
    devices: "{{ item.devices | default(omit) }}"
    auto_remove: "{{ item.auto_remove | default(omit) }}"
    recreate: "{{ item.recreate | default(omit) }}"
    log_driver: "{{ log_driver | default(omit) }}"
    log_opt: "{{ log_opt | default(omit) }}"
  with_items: "{{ deploy_deps }}"
  when:
    - deploy_deps is defined and deploy_deps | length > 0
    - deploy_deps_run

- name: "Deploy the main container | {{ playbook_app }}"
  community.general.docker_container:
    name: "{{ playbook_app }}"
    image: "{{ deploy_image }}:{{ deploy_image_tag }}"
    command: "{{ deploy_command | default(omit) }}"
    entrypoint: "{{ deploy_entrypoint | default(omit) }}"
    pull: "{{ deploy_pull | default(omit) }}"
    restart_policy: "{{ deploy_restart_policy | default('unless-stopped') }}"
    networks: "{{ deploy_networks | default(omit) }}"
    network_mode: "{{ deploy_network_mode | default(omit) }}"
    healthcheck: "{{ deploy_healthcheck | default(omit) }}"
    capabilities: "{{ deploy_capabilities | default(omit) }}"
    security_opt: "{{ deploy_security_opt | default(omit) }}"
    privileged: "{{ deploy_privileged | default(omit) }}"
    user: "{{ deploy_user | default(omit) }}"
    env: "{{ deploy_env | default(omit) }}"
    labels: "{{ deploy_labels | default(omit) }}"
    ports: "{{ deploy_ports | default(omit) }}"
    hostname: "{{ deploy_hostname | default(omit) }}"
    volumes: "{{ deploy_volumes | default(omit) }}"
    devices: "{{ deploy_devices | default(omit) }}"
    auto_remove: "{{ deploy_auto_remove | default(omit) }}"
    recreate: "{{ deploy_recreate | default(omit) }}"
    log_driver: "{{ log_driver | default(omit) }}"
    log_opt: "{{ log_opt | default(omit) }}"

- name: "Finishing commands | {{ playbook_app }}"
  ansible.builtin.raw: "{{ deploy_finish }}"
  changed_when: false
  when: deploy_finish is defined and deploy_finish | length > 0
